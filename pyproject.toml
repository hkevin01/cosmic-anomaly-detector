[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cosmic-anomaly-detector"
version = "0.1.0"
description = "AI-powered detection of artificial structures in space telescope images"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Cosmic Anomaly Detection Team", email = "contact@cosmic-anomaly-detector.org" },
]
keywords = ["astronomy", "AI", "JWST", "anomaly detection", "SETI"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pandas>=1.5.0",
    "scikit-learn>=1.2.0",
    "torch>=2.0.0",
    "opencv-python>=4.8.0",
    "astropy>=5.3.0",
    "matplotlib>=3.7.0",
    "requests>=2.31.0",
    "tqdm>=4.65.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
]
gpu = ["cupy-cuda11x>=12.0.0"]
docs = ["sphinx>=7.1.0", "sphinx-rtd-theme>=1.3.0"]

[project.urls]
Homepage = "https://github.com/cosmic-anomaly-detection/cosmic-anomaly-detector"
Documentation = "https://cosmic-anomaly-detector.readthedocs.io/"
Repository = "https://github.com/cosmic-anomaly-detection/cosmic-anomaly-detector.git"
Issues = "https://github.com/cosmic-anomaly-detection/cosmic-anomaly-detector/issues"

[project.scripts]
cosmic-analyze = "cosmic_anomaly_detector.cli:main"
cosmic-batch = "scripts.batch_analyze:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
